let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/.config/nvim
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +1 settings.vim
badd +10 init.vim
badd +37 test.vim
badd +187 autoload/plugged/vim-sneak/autoload/sneak/label.vim
badd +423 autoload/plugged/vim-sneak/plugin/sneak.vim
badd +46 autoload/plugged/vim-sneak/autoload/sneak/util.vim
badd +51 mappings.vim
badd +40 ~/.config/nvim/plugins.vim
badd +5 ~/.config/nvim/lua/plug-nvim-toggleterm.lua
badd +26 ~/.config/nvim/coc-settings.json
badd +2 ~/.config/nvim/coc-extensions.vim
badd +0 ~/.config/nvim/coc.vim
argglobal
%argdel
edit ~/.config/nvim/coc.vim
argglobal
balt ~/.config/nvim/coc-extensions.vim
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 199 - ((40 * winheight(0) + 22) / 45)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 199
normal! 09|
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0&& getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToOFAIc
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
